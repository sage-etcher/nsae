                        org     0DF0AH
                init:
0DF0AH                  jp      start
0DF0DH          start:
0DF0DH                  di
0DF0EH                  ld      sp,stack_ptr    ;set stack      ;0F0DCH
0DF11H                  ld      hl,labE6FF
0DF14H                  ld      a,(hl)          ;a = 0x10
0DF15H                  push    af
0DF16H                  ld      (hl),0

0DF18H                  ld      bc,00081H
0DF1BH                  ld      de,00801H
0DF1EH                  ld      hl,0E700H
0DF21H                  ld      a,1
0DF23H                  call    labE033

0DF26H                  ld      bc,00081H
0DF29H                  ld      de,00101H
0DF2CH                  ld      hl,0E900H
0DF2FH                  ld      a,3
0DF31H                  call    labE033

0DF34H                  call    get_sector
0DF37H                  ld      bc,8
0DF3AH          labDF3A:
0DF3AH                  push    bc
0DF3BH                  ld      c,0
0DF3DH                  call    0E909H
0DF40H                  ld      bc,03FFFH
0DF43H                  ld      h,b
0DF44H                  ld      l,c
0DF45H                  ld      d,h
0DF46H                  ld      e,l
0DF47H                  lddr
0DF49H                  pop     bc
0DF4AH                  ld      a,(hl)
0DF4BH                  cpl
0DF4CH                  ld      (hl),a
0DF4DH                  cp      (hl)
0DF4EH                  cpl
0DF4FH                  ld      (hl),a
0DF50H                  jr      nz,labDF56
0DF52H                  inc     b
0DF53H                  dec     c
0DF54H                  jr      nz,labDF3A
0DF56H          labDF56:
0DF56H                  ld      a,3             ;int enable, clear
0DF58H                  out     (060H),a        ;program parity
0DF5AH                  ld      bc,0100H
0DF5DH                  call    0E909H
0DF60H                  ld      bc,0201H
0DF63H                  call    0E909H
0DF66H                  ld      bc,0302H
0DF69H                  call    0E909H
0DF6CH                  ld      bc,5
0DF6FH                  call    0E909H
0DF72H                  ld      hl,0EE63H
0DF75H                  ld      (0EEFFH),hl
0DF78H                  ld      a,0EEH
0DF7AH                  ld      i,a
0DF7CH                  im      2
0DF7EH                  pop     af
0DF7FH                  ld      sp,0100H
0DF82H                  ld      (labE6FF),a
0DF85H                  ld      c,4
0DF87H                  call    0E906H
0DF8AH                  set     7,b
0DF8CH                  call    0E909H
0DF8FH                  call    0EA46H
0DF92H                  ld      c,4
0DF94H                  call    labE572
0DF97H                  ld      hl,labDFA9
0DF9AH                  call    0EA17H
0DF9DH                  jp      0E9D6H

                ;information
0DFA0H                  db      0,0,0,0,0,0,0,0,0
0DFA9H                  db      '64K Graphics CP/M 2.2  rev 1.2.0 for '
0DFCEH                  db      'Advantage HQ from North Star Computers,Inc.'
0DFF9H                  db      0x0d,0x0a,0x0a
0DFFCH                  db      0x0f,0x1c,0x80,0x00

;*****************************************************************************
;                       bios jump addresses?
;*****************************************************************************
0E000H          labE000:
0E000H                  jp      0EE42H          ;not yet loaded in bootloader
0E003H          labE003:
0E003H                  jp      0E96EH          ;not yet loaded in bootloader
0E006H          labE006:
0E006H                  jp      labE703         ;not yet loaded in bootloader
0E009H          labE009:
0E009H                  jp      labE706         ;not yet loaded in bootloader
0E00CH          labE00C:
0E00CH                  jp      labE56D
0E00FH          labE00F:
0E00FH                  jp      0E70CH          ;not yet loaded in bootloader
0E012H          labE012:
0E012H                  jp      0E70FH          ;not yet loaded in bootloader
0E015H          labE015:
0E015H                  jp      0E712H          ;not yet loaded in bootloader
0E018H          labE018:
0E018H                  jp      labE556
0E01BH          labE01B:
0E01BH                  jp      labE3E2
0E01EH          labE01E:
0E01EH                  jp      labE559
0E021H          labE021:
0E021H                  jp      labE55F
0E024H          labE024:
0E024H                  jp      labE564
0E027H          labE027:
0E027H                  jp      labE575
0E02AH          labE021:
0E02AH                  jp      labE583
0E02DH          labE02D:
0E02DH                  jp      0E715H          ;not yet loaded in bootloader
0E030H          labE030:
0E030H                  jp      labE56A
0E033H          labE033:
0E033H                  jp      labE347
0E036H          labE036:
0E036H                  ret                     ;???? place holder?
0E037H                  nop
0E038H                  nop
0E039H          labE039:
0E039H                  jp      labE039
0E03CH          labE03C:
0E03CH                  jp      labE642

;*****************************************************************************
;                       bios functions?
;*****************************************************************************
0E03FH          labE03F:
                        ;doesnt take any A
                        ;takes a C
0E03FH                  ld      (0F07AH),sp     ;save stack pointer
0E043H                  ld      sp,0F0B0H       ;set custom stack pointer
0E046H                  push    af              ;protect registers af,hl,de
0E047H                  push    hl
0E048H                  push    de
0E049H                  ld      a,5
0E04BH                  bit     7,c             ;if bit7 of C is 0
0E04DH                  jp      z,labE115       ;    goto labE115
0E050H                  ld      a,c
0E051H                  and     7
0E053H                  ld      c,a
0E054H                  cp      3
0E056H                  jr      c,labE05B
0E058H                  rla
0E059H                  and     0CH
0E05BH          labE05B:
0E05BH                  or      080H
0E05DH                  ld      l,a
0E05EH                  ld      a,(labE6F5+1)
0E061H                  and     l
0E062H                  jr      z,labE075
0E064H                  ld      e,028H
0E066H                  ld      a,b
0E067H                  add     a,a
0E068H                  add     a,a
0E069H                  add     a,a
0E06AH                  add     a,a
0E06BH                  or      d
0E06CH                  ld      d,a
0E06DH                  rr      b
0E06FH                  jr      nc,labE08B
0E071H                  set     6,l
0E073H                  jr      labE08B
0E075H          labE075:
0E075H                  ld      e,014H
0E077H                  ld      a,022H
0E079H                  sub     b
0E07AH                  jr      nc,labE081
0E07CH                  add     a,023H
0E07EH                  ld      b,a
0E07FH                  set     6,l
0E081H          labE081:
0E081H                  ld      a,l
0E082H                  and     040H
0E084H                  or      b
0E085H                  rrca
0E086H                  rrca
0E087H                  and     0F0H
0E089H                  add     a,d
0E08AH                  ld      d,a
0E08BH          labE08B:
0E08BH                  ld      a,d
0E08CH                  ld      (0F078H),a
0E08FH                  ld      a,e
0E090H                  cp      b
0E091H                  jr      nc,labE095
0E093H                  set     5,l             ;enable step inner/use precomp
0E095H          labE095:
0E095H                  ld      a,l
0E096H                  ld      (drvctrl),a     ;save drvctrl from l            ;0F074H
0E099H                  di
0E09AH                  ld      de,(0E912H)
0E09EH          labE09E:
0E09EH                  call    labE1FB
0E0A1H                  ld      a,(labE6BC)
0E0A4H                  and     07FH
0E0A6H                  jr      nz,labE09E
0E0A8H                  push    bc
0E0A9H                  call    labE28A
0E0ACH                  ld      a,(drvctrl)     ;0F074H
0E0AFH                  out     (081H),a        ;load drive control register
0E0B1H                  pop     bc
0E0B2H                  pop     hl
0E0B3H                  ld      a,l
0E0B4H                  or      a
0E0B5H                  jr      nz,labE0C0
0E0B7H                  in      a,(0E0H)        ;status 1
0E0B9H                  and     010H            ;Z if disk write protect
0E0BBH                  ld      a,6
0E0BDH                  jp      nz,labE111      ;jmp if writable
0E0C0H          labE0C0:
0E0C0H                  push    hl
0E0C1H                  push    bc
0E0C2H                  ld      hl,labE6E1
0E0C5H                  ld      b,0
0E0C7H                  add     hl,bc
0E0C8H                  ld      (labE6E6),hl
0E0CBH                  ld      a,(hl)
0E0CCH                  xor     059H
0E0CEH                  push    hl
0E0CFH                  call    z,labE2F3
0E0D2H                  pop     hl
0E0D3H                  pop     af
0E0D4H                  call    labE2FC
0E0D7H                  ld      a,(drvctrl)     ;0F074H
0E0DAH                  out     (081H),a        ;load drive control register
0E0DCH                  call    labE2E1
0E0DFH                  pop     bc
0E0E0H                  pop     hl
0E0E1H                  or      a
0E0E2H          labE0E2:
0E0E2H                  push    bc
0E0E3H                  push    hl
0E0E4H          labE0E4:
0E0E4H                  call    nz,labE25F
0E0E7H                  cp      b
0E0E8H                  push    af
0E0E9H                  in      a,(0E0H)        ;status 1
0E0EBH                  and     048H            ;no sector mark, no nmi
0E0EDH                  jr      nz,labE0FC      ;jump if neither are set
0E0EFH                  call    labE21F
0E0F2H                  pop     af
0E0F3H                  jr      nz,labE0E4
0E0F5H                  dec     c
0E0F6H                  jp      m,write_disk
0E0F9H                  jp      read_disk
0E0FCH          labE0FC:
0E0FCH                  call    get_sector_check_motor
0E0FFH                  pop     af
0E100H                  inc     a
0E101H                  jr      labE0E4
0E103H          labE103:
0E103H                  pop     bc
0E104H                  inc     b
0E105H                  ld      a,(0F078H)
0E108H                  inc     a
0E109H                  ld      (0F078H),a
0E10CH                  pop     af
0E10DH                  dec     a
0E10EH                  push    af
0E10FH                  jr      nz,labE0E2
0E111H          labE111:
0E111H                  ld      (0E912H),de
0E115H          labE115:
                        ;takes hl or de
0E115H                  ld      sp,0F0AEH       ;set custom stack pointer
0E118H                  push    af              ;protect af
0E119H                  ex      de,hl           ;protect hl in de
0E11AH                  call    labE33F
0E11DH                  ex      de,hl           ;restore hl
0E11EH                  in      a,(082H)        ;clear disk read
0E120H                  pop     af              ;restore af
0E121H                  pop     bc              ;restore bc
0E122H                  or      a
0E123H                  ld      sp,(0F07AH)
0E127H                  ret

0E128H          read_disk:
0E128H                  push    bc
0E129H                  ld      hl,023H
0E12CH                  call    labE207
0E12FH                  ld      a,(ctrlreg)     ;labE6BF+2
0E132H                  and     0F7H            ;set aquire to 0 (on) start disk read
0E134H                  out     (0F8H),a        ;set ctrlreg
0E136H                  out     (082H),a        ;set disk read
0E138H                  ld      hl,9
0E13BH                  call    labE207
0E13EH                  ld      a,(ctrlreg)     ;labE6BF+2
0E141H                  out     (0F8H),a        ;set ctrlreg
0E143H                  pop     bc
0E144H                  dec     c
0E145H                  ld      hl,read_secdata
0E148H                  jr      nz,read_sync
0E14AH                  ld      hl,cmp_secdata
0E14DH          read_sync:
0E14DH                  ex      (sp),hl
0E14EH                  call    serial_data_wait
0E151H                  in      a,(081H)        ;read sync1
0E153H                  cp      0FBH            ;check validity
0E155H                  jp      nz,serial_data_wait_error
0E158H                  ld      a,(0F078H)
0E15BH                  ld      b,a
0E15CH                  in      a,(080H)        ;read sync2
0E15EH                  cp      b
0E15FH                  ld      (0F079H),a
0E162H                  ld      bc,0
0E165H                  ret     z
0E166H                  cp      0FBH
0E168H                  ret     z
0E169H                  ld      hl,(labE6E6)
0E16CH                  ld      (hl),059H
0E16EH                  jp      labE1AA

0E171H          read_secdata:
0E171H                  in      a,(080H)        ;read data byte
0E173H                  ld      (hl),a          ;store byte
0E174H                  xor     c               ;calc crc
0E175H                  rlca
0E176H                  ld      c,a
0E177H                  call    get_status1_disabled
0E17AH                  in      a,(080H)        ;read data byte
0E17CH                  inc     hl              ;next destptr
0E17DH                  ld      (hl),a          ;store byte
0E17EH                  inc     hl              ;next destptr
0E17FH                  xor     c               ;calc crc
0E180H                  rlca
0E181H                  ld      c,a
0E182H                  djnz    read_secdata
0E184H          read_crc:
0E184H                  in      a,(080H)        ;read crc
0E186H                  xor     c               ;check crc
0E187H                  in      a,(082H)        ;clear disk read flag
0E189H                  jp      z,labE103       ;if crc match
0E18CH                  ld      a,2
0E18EH                  jp      labE111

0E191H          cmp_secdata:
0E191H                  in      a,(080H)        ;read data byte
0E193H                  cp      (hl)            ;compare against (hl)
0E194H                  jr      nz,labE1AA      ;if they dont match, jump
0E196H                  xor     c               ;calc crc
0E197H                  rlca
0E198H                  ld      c,a
0E199H                  call    get_status1_disabled
0E19CH                  in      a,(080H)        ;read data byte
0E19EH                  inc     hl              ;next destdir
0E19FH                  cp      (hl)            ;compare against (hl)
0E1A0H                  jr      nz,labE1AA      ;if they dont match, jump
0E1A2H                  xor     c               ;calc crc
0E1A3H                  rlca
0E1A4H                  ld      c,a
0E1A5H                  inc     hl              ;next destdir
0E1A6H                  djnz    cmp_secdata
0E1A8H                  jr      read_crc

0E1AAH          labE1AA:
0E1AAH                  ld      a,3
0E1ACH                  jp      labE111

0E1AFH          write_disk:
0E1AFH                  ld      bc,02200H
0E1B2H                  out     (083H),a        ;set disk write flag
0E1B4H          write_preamble:
0E1B4H                  xor     a               ;a = 0
0E1B5H                  out     (080H),a        ;write preamble byte
0E1B7H                  call    get_status1_disabled
0E1BAH                  djnz    write_preamble
0E1BCH                  ld      a,0FBH
0E1BEH                  out     (080H),a        ;write sync1
0E1C0H                  ex      (sp),hl
0E1C1H                  ex      (sp),hl
0E1C2H                  ld      a,(0F078H)
0E1C5H                  out     (080H),a        ;write sync2?
0E1C7H                  pop     hl
0E1C8H          write_secdata:
0E1C8H                  ld      a,(hl)
0E1C9H                  inc     hl
0E1CAH                  out     (080H),a        ;write data
0E1CCH                  xor     c               ;calc crc
0E1CDH                  rlca
0E1CEH                  ld      c,a
0E1CFH                  call    get_status1_disabled
0E1D2H                  ld      a,(hl)
0E1D3H                  out     (080H),a        ;write data
0E1D5H                  inc     hl              ;next srcptr
0E1D6H                  xor     c               ;calc crc
0E1D7H                  rlca
0E1D8H                  ld      c,a
0E1D9H                  djnz    write_secdata
0E1DBH                  ld      a,c
0E1DCH                  out     (080H),a        ;write crc
0E1DEH                  jp      labE103

0E1E1H          get_status1_disabled:
0E1E1H                  in      a,(0E0H)        ;status 1
0E1E3H                  and     0               ;return always
0E1E5H                  ret     z
                ;start dead code {{{
0E1E6H                  in      a,(0)           ;access io board 6
0E1E8H                  ld      (de),a          ;store in (de)
0E1E9H                  inc     de              ;next destptr
0E1EAH                  ret                     ;return

0E1EBH                  push    af
0E1ECH                  push    de
0E1EDH                  ld      de,(0E912H)
0E1F1H                  call    get_status1_disabled
0E1F4H                  ld      (0E912H),de
0E1F8H                  pop     de
0E1F9H                  pop     af
0E1FAH                  ret
                ;end dead code }}}

0E1FBH          labE1FB:
0E1FBH                  ld      (0E912H),de
0E1FFH                  ret

0E200H                  ld      (hl),c
0E201H                  xor     0EDH
0E203H                  ld      e,e
0E204H                  ld      (de),a
0E205H                  jp      (hl)
0E206H                  ret

0E207H          labE207:
0E207H                  ld      bc,0FFFFH
0E20AH          labE20A:
0E20AH                  in      a,(0E0H)        ;status 1
0E20CH                  and     0               ;jump to labE21A
0E20EH                  jp      z,labE21A
                ;start dead code {{{
0E211H                  add     hl,bc
0E212H                  jp      nc,ret0
0E215H                  in      a,(000h)        ;access ioboard in slot 6
0E217H                  ld      (de),a
0E218H                  inc     de
0E219H                  or      a
                ;end dead code }}}
0E21AH          labE21A:
0E21AH                  add     hl,bc
0E21BH                  jp      c,labE20A
0E21EH          ret0:
0E21EH                  ret

0E21FH          labE21F:
0E21FH                  ld      hl,0198H
0E222H          labE222:
0E222H                  in      a,(0E0H)        ;status 1
0E224H                  and     040H            ;check sector mark
0E226H                  ret     nz              ;return if set
0E227H                  in      a,(0E0H)        ;status 1
0E229H                  and     0               ;jump to labE237
                ;start dead code {{{
0E22BH                  jp      z,labE237
0E22EH                  in      a,(0E0H)
0E230H                  and     040H
0E232H                  ret     nz
0E233H                  in      a,(0)
0E235H                  ld      (de),a
0E236H                  inc     de
                ;end dead code }}}

0E237H          labE237:
0E237H                  in      a,(0E0H)        ;status 1
0E239H                  and     040H            ;check sector mark
0E23BH                  ret     nz              ;return if we read a sector mark
0E23CH                  dec     hl
0E23DH                  ld      a,h
0E23EH                  or      l
0E23FH                  jp      nz,labE222
0E242H          labE242:
0E242H                  ld      (labE6E1),a
0E245H                  ld      a,4
0E247H                  jp      labE111
0E24AH          labE24A:
0E24AH                  ld      hl,04EFH
0E24DH          labE24D:
0E24DH                  call    get_status1_disabled
0E250H                  in      a,(0E0H)        ;status 1
0E252H                  and     040H            ;check sector mark
0E254H                  ret     z               ;return if not at sector mark
0E255H                  dec     hl
0E256H                  ld      a,h
0E257H                  or      l
0E258H                  jr      nz,labE24D
0E25AH                  jr      labE242
0E25CH          labE25C:
0E25CH                  call    labE21F
0E25FH          labE25F:
0E25FH                  call    labE1FB
0E262H                  call    labE24A
0E265H                  call    wait_sector_stablize
0E268H                  inc     a
0E269H                  and     0FH
0E26BH                  ret

0E26CH          serial_data_wait:
0E26CH                  ld      bc,035E0H       ;attempt 0x35 times
                                                ;input from 0xE0
0E26FH          serial_data_wait_loop:
0E26FH                  in      f,(c)           ;load status1 into flags
0E271H                  ret     m               ;return if disk serial data
0E272H                  in      a,(0E0H)        ;status 1
0E274H                  and     0               ;jump serial_data_wait_again
0E276H                  jp      z,serial_data_wait_again
                ;start dead code {{{
0E279H                  in      f,(c)
0E27BH                  ret     m
0E27CH                  in      a,(0)
0E27EH                  ld      (de),a
0E27FH                  inc     de
                ;end dead code }}}
0E280H          serial_data_wait_again:
0E280H                  in      f,(c)           ;load status 1 into flags
0E282H                  ret     m               ;return if disk serial data
0E283H                  djnz    serial_data_wait_loop
0E285H          serial_data_wait_error:
0E285H                  ld      a,1
0E287H                  jp      labE111

0E28AH          labE28A:
0E28AH                  call    get_sector_check_motor
0E28DH                  cp      0EH
0E28FH                  ret     nz
0E290H                  xor     a
0E291H                  ld      (labE6E1),a
0E294H                  call    start_motor
0E297H                  ld      b,064H
0E299H          labE299:
0E299H                  push    hl
0E29AH          labE29A:
0E29AH                  push    bc
0E29BH                  call    labE1FB
0E29EH                  ld      hl,0196H
0E2A1H                  call    labE207
0E2A4H                  pop     bc
0E2A5H                  djnz    labE29A
0E2A7H                  pop     hl
0E2A8H                  ret

0E2A9H          get_sector_check_motor:
0E2A9H                  call    get_sector
0E2ACH                  cp      0EH
0E2AEH                  ret     z
0E2AFH          start_motor:
0E2AFH                  ld      h,5             ;start motor cmd
0E2B1H                  call    execute_cmd_05
0E2B4H          get_sector:
0E2B4H                  ld      h,0             ;read sector cmd
0E2B6H          execute_cmd_05:
0E2B6H                  call    get_status1_disabled
0E2B9H                  ld      a,(ctrlreg)     ;get ctrlreg    ;labE6BF+2
0E2BCH                  ld      l,a             ;save into L
0E2BDH                  and     0F8H            ;clear the cmd
0E2BFH                  or      h               ;set the cmd
0E2C0H                  ld      h,a             ;backup into h
0E2C1H                  cp      l               ;if prev_cmd == new_cmd 
                                                ;    goto wait_sector_stablize
0E2C2H                  jr      z,wait_sector_stablize
0E2C4H                  in      a,(0D0H)        ;status 2
0E2C6H                  ld      l,a             ;store status2 in l
0E2C7H                  ld      a,h             ;execute cmd again
0E2C8H                  out     (0F8H),a        ;control reg
0E2CAH                  ld      (ctrlreg),a     ;labE6BF+2
0E2CDH          cmdack_wait:
0E2CDH                  call    get_status1_disabled
0E2D0H                  in      a,(0D0H)        ;status 2
0E2D2H                  xor     l               ;check cmdack bit
0E2D3H                  jp      p,cmdack_wait   ;loop until compliment
0E2D6H          wait_sector_stablize:
0E2D6H                  ld      l,080H          ;L = 1000$0000b
0E2D8H          wait_sector_stablize_loop:
0E2D8H                  in      a,(0D0H)        ;status 2
0E2DAH                  and     0FH             ;get sector number from result
0E2DCH                  cp      l               ;loop until the sector number is the same 
                                                ;through 2 'in' calls or on first iteration
                                                ;is equal to input L... for some reason
0E2DDH                  ret     z
0E2DEH                  ld      l,a
0E2DFH                  jr      wait_sector_stablize_loop

0E2E1H          labE2E1:
0E2E1H                  ld      hl,labE6E1
0E2E4H                  ld      a,(hl)
0E2E5H                  ld      (hl),c
0E2E6H                  cp      c
0E2E7H                  ret     z
0E2E8H                  ld      b,0CH
0E2EAH                  call    labE299
0E2EDH          labE2ED:
0E2EDH                  call    labE25C
0E2F0H                  ret     z
0E2F1H                  jr      labE2ED
0E2F3H          labE2F3:
0E2F3H                  push    hl
0E2F4H                  call    labE2E1
0E2F7H                  call    labE21F
0E2FAH                  pop     hl
0E2FBH                  xor     a
0E2FCH          labE2FC:
0E2FCH                  ld      b,a
0E2FDH                  sub     (hl)
0E2FEH                  ld      (hl),b
0E2FFH                  ret     z
0E300H                  ld      l,020H
0E302H                  ld      h,a
0E303H                  jp      p,labE310
0E306H                  cpl
0E307H                  inc     a
0E308H                  ld      h,a
0E309H                  in      a,(0E0H)        ;status 1
0E30BH                  and     020H            ;check track 0
0E30DH                  ret     nz              ;return if on track 0
0E30EH                  ld      l,0
0E310H          labE310:
0E310H                  ld      a,(drvctrl)     ;load drvctrl   ;0F074H
0E313H                  and     0CFH            ;define step out, pulse off
0E315H                  or      l
0E316H                  ld      l,a             ;save in L
0E317H          labE317:
0E317H                  ld      a,l             ;load from L
0E318H                  out     (081H),a        ;drive control
0E31AH                  or      010H            ;pulse on
0E31CH                  out     (081H),a        ;drive control
0E31EH                  xor     010H            ;pulse off
0E320H                  out     (081H),a        ;drive control
0E322H                  ld      a,(labE6F8)
0E325H                  and     l
0E326H                  and     0FH
0E328H                  ld      b,1
0E32AH                  jr      nz,labE32E
0E32CH                  ld      b,5
0E32EH          labE32E:
0E32EH                  call    labE299
0E331H                  in      a,(0E0H)        ;status 1
0E333H                  and     020H            ;check track 0 (again)
0E335H                  jr      nz,labE33A      ;if at track 0 throw error
0E337H                  dec     h
0E338H                  jr      nz,labE317      ;step again
0E33AH          labE33A:
0E33AH                  ld      b,3             ;throw error
0E33CH                  jp      labE299

0E33FH          labE33F:
0E33FH                  ld      hl,labE6FF
0E342H                  bit     3,(hl)
0E344H                  ret     z
0E345H                  ei
0E346H                  ret

0E347H          labE347:                        ;what do you do?
0E347H                  ld      (labF076),a     ;protect acc in variable
0E34AH          labE34A:
0E34AH                  ld      a,(labE6E9)     ;read 0x0a
0E34DH          labE34D:
0E34DH                  ld      (labF077),a     ;write 0x0a
0E350H                  push    hl              ;protect registers
0E351H                  push    de
0E352H                  push    bc
0E353H                  ld      a,(labF076)     ;restore acc
0E356H                  and     0FH             ;get lsb
0E358H                  call    labE03F
0E35BH                  pop     bc
0E35CH                  pop     de
0E35DH                  pop     hl
0E35EH                  jr      nz,labE372
0E360H                  ld      a,e
0E361H                  or      a
0E362H                  jr      nz,labE370
0E364H                  ld      a,(labE6FF)
0E367H                  and     040H
0E369H                  ld      e,2
0E36BH                  jr      nz,labE34A
0E36DH                  call    labE25C
0E370H          labE370:
0E370H                  xor     a
0E371H                  ret

0E372H          labE372:
0E372H                  ld      (labE3D2+1),a
0E375H                  cp      4
0E377H                  jr      nc,labE37F
0E379H                  ld      a,(labF077)
0E37CH                  dec     a
0E37DH                  jr      nz,labE34D
0E37FH          labE37F:
0E37FH                  ld      a,c
0E380H                  and     0FH
0E382H                  ld      (labE3D6+1),a
0E385H                  ld      a,b
0E386H                  push    hl
0E387H                  push    de
0E388H                  push    bc
0E389H                  ld      hl,labE3DE
0E38CH                  ld      (hl),d
0E38DH                  dec     hl
0E38EH                  call    labE3A8
0E391H                  ld      a,c
0E392H                  call    labE3A8
0E395H                  ld      (hl),c
0E396H                  ld      hl,disk_error_msg
0E399H                  ld      a,(labE3D2+1)
0E39CH                  call    labE3B4
0E39FH                  pop     bc
0E3A0H                  pop     de
0E3A1H                  pop     hl
0E3A2H                  jp      nz,labE34A
0E3A5H                  xor     a
0E3A6H                  scf
0E3A7H                  ret

0E3A8H          labE3A8:
0E3A8H                  ld      c,0FFH
0E3AAH          labE3AA:
0E3AAH                  sub     0AH
0E3ACH                  inc     c
0E3ADH                  jr      nc,labE3AA
0E3AFH                  add     a,0AH
0E3B1H                  ld      (hl),a
0E3B2H                  dec     hl
0E3B3H                  ret

0E3B4H          labE3B4:
0E3B4H                  or      a
0E3B5H                  call    labE6EA
0E3B8H                  or      a
0E3B9H                  call    nz,0EA17H
0E3BCH                  xor     a
0E3BDH                  call    labE6EA
0E3C0H                  or      a
0E3C1H                  call    z,labE009
0E3C4H                  cp      3
0E3C6H                  jp      z,labE003
0E3C9H                  ld      b,a
0E3CAH                  ld      a,(labE6F9)
0E3CDH                  cp      b
0E3CEH                  ret

;*****************************************************************************
;                       random data
;*****************************************************************************
0E3CFH          disk_error_msg:
0E3CFH                  db      0x0d,0x0a
                        db      'T   D   S   '
                        db      0x0d,0x0a,0x00

0E3D5H                  db      0x0d,0x0a,0x00

0E3DAH                  jr      nz,labE3FC

0E3DCH                  jr      nz,labE3FD+1
0E3DEH          labE3DE:
0E3DEH                  nop
0E3DFH                  dec     c
0E3E0H                  ld      a,(bc)
0E3E1H                  add     a,b
0E3E2H          labE3E2:
0E3E2H                  ld      l,c
0E3E3H                  ld      h,0
0E3E5H                  xor     a
0E3E6H                  call    labE036
0E3E9H                  ld      (0F06EH),hl
0E3ECH                  ex      de,hl
0E3EDH                  or      a
0E3EEH                  ld      (0F06AH),a
0E3F1H                  ret     nz
0E3F2H                  dec     a
0E3F3H          labE3F3:
0E3F3H                  ld      (0F073H),a
0E3F6H                  ld      a,e
0E3F7H          labE3F7:
0E3F7H                  cp      4
0E3F9H                  jp      nc,labE487
0E3FCH          labE3FC:
0E3FCH                  ld      a,l
0E3FDH          labE3FD:
0E3FDH                  and     1
0E3FFH                  jp      nz,labE473
0E402H                  call    labE642
0E405H                  ld      a,0FFH
0E407H                  ld      (0F068H),a
0E40AH                  ld      a,(0F06EH)
0E40DH                  call    labE48F
0E410H                  or      080H
0E412H                  ld      c,a
0E413H          labE413:
0E413H                  ld      b,0
0E415H                  ld      de,1
0E418H                  ld      a,1
0E41AH          labE41A:
0E41AH                  ld      hl,0F100H
0E41DH                  call    labE033
0E420H                  jr      c,labE413
0E422H                  ld      b,090H
0E424H                  res     7,c
0E426H                  ld      hl,0F15CH
0E429H                  ld      a,(hl)
0E42AH                  and     010H
0E42CH          labE42C:
0E42CH                  ld      de,labE516
0E42FH                  jr      z,labE453
0E431H                  ld      b,(hl)
0E432H                  ld      a,b
0E433H                  and     040H
0E435H                  jr      z,labE445
0E437H                  ld      a,(labE6F8)
0E43AH                  push    bc
0E43BH          labE43B:
0E43BH                  rlca
0E43CH                  dec     c
0E43DH                  jr      nz,labE43B
0E43FH                  pop     bc
0E440H                  ld      de,labE536
0E443H                  jr      c,labE453
0E445H          labE445:
0E445H                  ld      a,0BFH
0E447H                  and     b
0E448H                  ld      b,a
0E449H                  ld      de,labE526
0E44CH                  and     020H
0E44EH                  jr      nz,labE453
0E450H                  ld      de,labE516
0E453H          labE453:
0E453H                  ld      a,(labE6F5+1)
0E456H                  ld      a,b
0E457H                  ld      hl,(0F06EH)
0E45AH                  ld      bc,labE6F9+1
0E45DH                  add     hl,bc
0E45EH                  ld      (hl),a
0E45FH                  and     0CH
0E461H                  ld      hl,0
0E464H                  ret     nz
0E465H                  call    labE473
0E468H                  dec     hl
0E469H                  ld      a,(de)
0E46AH                  ld      (hl),a
0E46BH                  inc     de
0E46CH                  ld      bc,0BH
0E46FH                  add     hl,bc
0E470H                  ld      (hl),e
0E471H                  inc     hl
0E472H                  ld      (hl),d
0E473H          labE473:
0E473H                  ld      a,(0F06EH)
0E476H                  ld      hl,labE4C1
0E479H                  ld      bc,011H
0E47CH                  inc     a
0E47DH          labE47D:
0E47DH                  add     hl,bc
0E47EH                  dec     a
0E47FH                  jr      nz,labE47D
0E481H                  ld      a,(hl)
0E482H                  ld      (0F06AH),a
0E485H                  inc     hl
0E486H                  ret

0E487H          labE487:
0E487H                  ld      hl,0
0E48AH                  xor     a
0E48BH                  ld      (4),a
0E48EH                  ret

0E48FH          labE48F:
0E48FH                  dec     a
0E490H                  ld      hl,labE6E6+2
0E493H                  cp      (hl)
0E494H                  inc     a
0E495H                  jr      c,labE4AA
0E497H                  ld      hl,labE4B3+1
0E49AH                  add     a,041H
0E49CH                  cp      (hl)
0E49DH                  jr      z,labE4A9
0E49FH                  ld      (hl),a
0E4A0H                  ld      hl,labE4AC
0E4A3H                  call    0EA17H
0E4A6H                  call    labE009
0E4A9H          labE4A9:
0E4A9H                  xor     a
0E4AAH          labE4AA:
0E4AAH                  inc     a
0E4ABH                  ret

;******************** data start? *******************
0E4ACH          labE4AC:
0E4ACH                  db      0x0d,0x0a
0E4AEH                  db      'MOUNT A: IN DRIVE 1, TYPE ANY KEY'
0E4C5H                  db      0x0d,0x0a,0x80

0E4C8H                  db      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
0E4D0H                  db      0x00,0x01,0xef,0x26,0xe5,0x9a,0xef,0x81
0E4D8H                  db      0xef,0x00,0x00,0x00,0x00,0x00,0x00,0x00
0E4E0H                  db      0x00,0x00,0x01,0xef,0x26,0xe5,0xd3,0xef
0E4E8H                  db      0xba,0xef,0x00,0x00,0x00,0x00,0x00,0x00
0E4F0H                  db      0x00,0x00,0x00,0x01,0xef,0x26,0xe5,0x0c
0E4F8H                  db      0xf0,0xf3,0xef,0x00,0x00,0x00,0x00,0x00
0E500H                  db      0x00,0x00,0x00,0x00,0x01,0xef,0x26,0xe5
0E508H                  db      0x45,0xf0,0x2c,0xf0,0x08,0x28,0x00,0x03
0E510H                  db      0x07,0x00,0xa4,0x00,0x3f,0x00

0E516H          labE516:
0E516H                  db      0xc0,0x00,0x10,0x00,0x02,0x00,0x10,0x28
0E51EH                  db      0x00,0x04,0x0f,0x01,0x51,0x00,0x3f,0x00

0E526H          labE526:
0E526H                  db      0x80,0x00,0x10,0x00,0x02,0x00,0x10,0x28
0E52EH                  db      0x00,0x04,0x0f,0x01,0xa9,0x00,0x3f,0x00

0E536H          labE536:
0E536H                  db      0x80,0x00,0x10,0x00,0x02,0x00,0x20,0x28
0E53EH                  db      0x00,0x05,0x1f,0x03,0xc4,0x00,0x7f,0x00

0E546H                  db      0x80,0x00,0x20,0x00,0x02,0x00,0x01,0x00
0E54EH                  db      0x00,0x60
;******************** data stop? ********************

0E550H          labE550:
0E550H                  add     a,b
0E551H                  nop
0E552H                  jr      nz,labE554
0E554H          labE554:
0E554H                  ld      (bc),a
0E555H                  nop
0E556H          labE556:
0E556H                  ld      bc,0
0E559H          labE559:
0E559H                  ld      h,b
0E55AH                  ld      l,c
0E55BH                  ld      (0F06BH),hl
0E55EH                  ret

0E55FH          labE55F:
0E55FH                  ld      a,c
0E560H          labE560:
0E560H                  ld      (0F06DH),a
0E563H                  ret

0E564H          labE564:
0E564H                  ld      h,b
0E565H                  ld      l,c
0E566H                  ld      (0F070H),hl
0E569H                  ret

0E56AH          labE56A:
0E56AH                  ld      l,c
0E56BH                  ld      h,b
0E56CH                  ret

0E56DH          labE56D:
0E56DH                  push    bc
0E56EH          labE56E:
0E56EH                  call    labE642
0E571H                  pop     bc
0E572H          labE572:
0E572H                  jp      0E709H
0E575H          labE575:
0E575H                  call    labE642
0E578H                  ld      a,1
0E57AH                  ld      (0F069H),a
0E57DH                  xor     a
0E57EH                  ld      (0F072H),a
0E581H                  jr      labE5C9
0E583H          labE583:
0E583H                  xor     a
0E584H                  ld      (0F069H),a
0E587H                  ld      hl,0F072H
0E58AH                  dec     c
0E58BH                  jp      m,labE59A
0E58EH                  jr      z,labE596
0E590H                  ld      a,(0F06AH)
0E593H                  ld      (hl),a
0E594H                  jr      labE5C9
0E596H          labE596:
0E596H                  ld      (hl),080H
0E598H                  jr      labE5C9
0E59AH          labE59A:
0E59AH                  or      (hl)
0E59BH                  jr      z,labE5C9
0E59DH                  dec     (hl)
0E59EH                  ld      hl,(0F065H)
0E5A1H                  ex      de,hl
0E5A2H                  ld      hl,(0F067H)
0E5A5H                  or      h
0E5A6H                  ld      a,028H
0E5A8H                  jp      p,labE5AD
0E5ABH                  ld      a,040H
0E5ADH          labE5AD:
0E5ADH                  inc     l
0E5AEH                  sub     l
0E5AFH                  jr      nz,labE5B3
0E5B1H                  ld      l,a
0E5B2H                  inc     de
0E5B3H          labE5B3:
0E5B3H                  push    hl
0E5B4H                  ld      hl,(0F06BH)
0E5B7H                  call    labE63A
0E5BAH                  pop     de
0E5BBH                  jr      nz,labE5C5
0E5BDH                  ld      hl,(0F06DH)
0E5C0H                  call    labE63A
0E5C3H                  jr      z,labE5C9
0E5C5H          labE5C5:
0E5C5H                  xor     a
0E5C6H                  ld      (0F072H),a
0E5C9H          labE5C9:
0E5C9H                  ld      hl,(0F06BH)
0E5CCH                  ex      de,hl
0E5CDH                  ld      hl,(0F065H)
0E5D0H                  call    labE63A
0E5D3H                  jr      nz,labE5E3
0E5D5H                  ld      hl,(0F06DH)
0E5D8H                  ex      de,hl
0E5D9H                  ld      hl,(0F067H)
0E5DCH                  call    labE63A
0E5DFH                  and     0FCH
0E5E1H                  jr      z,labE5F1
0E5E3H          labE5E3:
0E5E3H                  call    labE642
0E5E6H                  ld      a,(0F072H)
0E5E9H                  and     07FH
0E5EBH                  ld      a,0
0E5EDH                  jr      nz,labE5F0
0E5EFH                  inc     a
0E5F0H          labE5F0:
0E5F0H                  or      a
0E5F1H          labE5F1:
0E5F1H                  ld      hl,(0F06BH)
0E5F4H                  ld      (0F065H),hl
0E5F7H                  ld      hl,(0F06DH)
0E5FAH                  ld      (0F067H),hl
0E5FDH                  ld      b,1
0E5FFH                  call    nz,labE64C
0E602H                  ld      a,(0F067H)
0E605H                  and     3
0E607H                  rra
0E608H                  ld      h,a
0E609H                  rra
0E60AH                  ld      l,a
0E60BH                  ld      de,0F100H
0E60EH                  add     hl,de
0E60FH                  ld      de,(0F070H)
0E613H                  ld      a,(0F069H)
0E616H                  dec     a
0E617H                  push    af
0E618H                  jr      z,labE61E
0E61AH                  ld      (labE6F3),a
0E61DH                  ex      de,hl
0E61EH          labE61E:
0E61EH                  ld      bc,080H
0E621H                  ldir
0E623H                  pop     af
0E624H                  ret     z
0E625H                  ld      hl,0F072H
0E628H                  ld      a,(hl)
0E629H                  or      a
0E62AH                  jp      p,labE631
0E62DH                  xor     a
0E62EH                  ld      (hl),a
0E62FH                  jr      labE635
0E631H          labE631:
0E631H                  ld      hl,0F073H
0E634H                  inc     (hl)
0E635H          labE635:
0E635H                  call    z,labE642
0E638H                  xor     a
0E639H                  ret

0E63AH          labE63A:
0E63AH                  ld      a,d
0E63BH                  xor     h
0E63CH                  ld      a,0FFH
0E63EH                  ret     nz
0E63FH                  ld      a,e
0E640H                  xor     l
0E641H                  ret

0E642H          labE642:
0E642H                  ld      a,(labE6F3)
0E645H                  or      a
0E646H                  ret     z
0E647H                  xor     a
0E648H                  ld      (labE6F3),a
0E64BH                  ld      b,a
0E64CH          labE64C:
0E64CH                  ld      a,(0F067H)
0E64FH                  and     0FCH
0E651H                  rrca
0E652H                  rrca
0E653H                  ld      c,a
0E654H                  ld      d,0F1H
0E656H                  ld      hl,(0F065H)
0E659H                  ld      a,(0F068H)
0E65CH                  or      a
0E65DH                  jp      m,labE039
0E660H                  push    hl
0E661H                  push    bc
0E662H                  call    labE48F
0E665H                  pop     bc
0E666H                  ld      hl,(0F068H)
0E669H                  ld      h,0
0E66BH                  ld      de,labE6F9+1
0E66EH                  add     hl,de
0E66FH                  ld      e,b
0E670H                  ld      d,c
0E671H                  or      080H
0E673H                  ld      c,a
0E674H                  ld      a,(hl)
0E675H                  rra
0E676H                  jr      nc,labE68A
0E678H                  ld      a,e
0E679H                  or      a
0E67AH                  jp      z,labE69F
0E67DH                  ex      (sp),hl
0E67EH                  ld      a,l
0E67FH                  cp      023H
0E681H                  jr      c,labE686
0E683H                  ld      a,085H
0E685H                  sub     l
0E686H          labE686:
0E686H                  rlca
0E687H                  rlca
0E688H                  ld      l,a
0E689H                  ex      (sp),hl
0E68AH          labE68A:
0E68AH                  xor     a
0E68BH                  ld      a,d
0E68CH                  rra
0E68DH                  jr      nc,labE691
0E68FH                  add     a,5
0E691H          labE691:
0E691H                  ld      d,a
0E692H                  ld      a,(hl)
0E693H                  pop     hl
0E694H                  ld      h,1
0E696H                  and     041H
0E698H                  jr      nz,labE6A8
0E69AH                  ld      a,l
0E69BH                  cp      023H
0E69DH                  jr      c,labE6A8
0E69FH          labE69F:
0E69FH                  ld      hl,0E9ECH
0E6A2H                  call    0EA17H
0E6A5H                  jp      labE003
0E6A8H          labE6A8:
0E6A8H                  ld      a,h
0E6A9H                  ld      b,l
0E6AAH                  ld      hl,0F100H
0E6ADH                  jp      labE033
0E6B0H                  ld      (0C208H),sp
0E6B4H                  ld      sp,0C208H
0E6B7H                  push    hl
0E6B8H                  push    de
0E6B9H                  push    bc
0E6BAH                  push    af
0E6BBH                  halt

;********************** data start *******************************
0E6BCH                  db      0x00,0x00,0x00,0xfc
0E6C0H                  db      0x00,0x3d,0x00,0xa0,0xa1,0xa2,0xa3,0xf8
0E6C8H                  db      0x90,0x00,0x00,0x00,0x00,0x00,0x00,0x00
0E6D0H                  db      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
0E6D8H                  db      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
0E6E0H                  db      0x00,0x01,0x00,0x59,0x59,0x59,0xe2,0xe6
0E6E8H                  db      0x01

0E6E9H          labE6E9:
0E6E9H                  db      0x0a,0xc9,0x00,0x00,0xc9,0x00,0x00
0E6F0H                  db      0xc9,0x00,0x00,0x00,0x00,0xca,0x00,0xf3
0E6F8H                  db      0xff,0x01,0x00,0x00,0x00,0x00,0x01,0x10
...

0F076H          labF076:
                        ds      1

0F077H          labF077:
                        ds      1
;**********************  data end  *******************************

; vim: ts=8 sts=8 sw=8 et fdm=marker
